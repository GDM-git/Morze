package MorzePack;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashSet;
import java.util.Properties;
import java.util.Scanner;

public class Coder_English_to_Morze implements Coder {

    public void coding(String File_in_name, String File_out_name, HashSet<Counter> Char_list) throws IOException {
        System.out.println("English_to_Morze");
        //Подключаем пропертЮ
        Properties Decode = new Properties();
        FileInputStream in1 = new FileInputStream("Decode1.properties");
        Decode.load(in1);
        //Проверка файла, с которого производится ввод
        File File_in = new File(File_in_name);
        if (File_in.exists() == false) {
            throw null;
        }
        //Обновление файла для вывода
        File File_out = new File(File_out_name);
        if (File_out.exists()) {
            File_out.delete();
        }
        File_out.createNewFile();
        //Подключаем читателя и писателя
        FileWriter writer = new FileWriter(File_out);
        Scanner scan = new Scanner(File_in);
        //Здесь будет хранится текущая обрабатываемая строка
        StringBuilder Read_str = new StringBuilder();
        //Счетчик ошибок
        int k = 0;
        try {
            //Читаем первую строку
            Read_str.append(scan.nextLine());
            while (true) {
                //Записываем первую строку в виде кода Морзе
                for (int i = 0; i < Read_str.length(); i++) {
                    try {
                        if (Read_str.charAt(i) != ' ') {
                            writer.write((String)Decode.get(Character.toString(Read_str.charAt(i))));
                        }
                        writer.write(" ");
                        Counter count = new Counter(Read_str.charAt(i));
                        Char_list.add(count);
                    }
                    catch (Throwable My_ex) {
                        if (k == 0) {
                            System.out.print(My_ex.getMessage() + " - ");
                        }
                        k++;
                    }
                }
                //Сохраняем
                writer.flush();
                //Чистим StringBuilder и читаем следущую строку
                Read_str.delete(0, Read_str.length());
                Read_str.append(scan.nextLine());
                writer.write("\n");
            }
        }
        catch(Throwable My_ex){
            if (k != 0) {
                System.out.print(k + "\n");
            }
            System.out.println(My_ex.getMessage());
        }
    }
}
